// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <matrix/math.hpp>

namespace sym {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: compute_yaw_innov_var_and_h
 *
 * Args:
 *     state: Matrix25_1
 *     P: Matrix24_24
 *     R: Scalar
 *
 * Outputs:
 *     innov_var: Scalar
 *     H: Matrix24_1
 */
template <typename Scalar>
void ComputeYawInnovVarAndH(const matrix::Matrix<Scalar, 25, 1>& state,
                            const matrix::Matrix<Scalar, 24, 24>& P, const Scalar R,
                            Scalar* const innov_var = nullptr,
                            matrix::Matrix<Scalar, 24, 1>* const H = nullptr) {
  // Total ops: 1

  // Unused inputs
  (void)state;

  // Input arrays

  // Intermediate terms (0)

  // Output terms (2)
  if (innov_var != nullptr) {
    Scalar& _innov_var = (*innov_var);

    _innov_var = P(2, 2) + R;
  }

  if (H != nullptr) {
    matrix::Matrix<Scalar, 24, 1>& _h = (*H);

    _h.setZero();

    _h(2, 0) = 1;
  }
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym
